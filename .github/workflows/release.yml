name: Release

# Trigger on version tags
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'

# Grant write permissions for creating GitHub releases
permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  # Ensure all tests pass before publishing
  test:
    name: Test before release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
        components: rustfmt, clippy
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Run clippy
      run: cargo clippy -- -D warnings
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Build WASM
      run: cargo build --target wasm32-unknown-unknown --release

  # Publish crates to crates.io in dependency order
  publish:
    name: Publish to crates.io
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Verify versions match
      run: |
        CARGO_VERSION=$(grep "^version" Cargo.toml | head -1 | cut -d'"' -f2)
        TAG_VERSION="${{ steps.get_version.outputs.VERSION }}"
        if [ "$CARGO_VERSION" != "$TAG_VERSION" ]; then
          echo "Error: Cargo.toml version ($CARGO_VERSION) doesn't match tag version ($TAG_VERSION)"
          exit 1
        fi
    
    # Publish in dependency order
    - name: Publish icarus-core
      run: |
        cd crates/icarus-core
        cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --no-verify
        # Wait for crates.io to index
        sleep 30
    
    - name: Publish icarus-derive
      run: |
        cd crates/icarus-derive
        cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --no-verify
        sleep 30
    
    - name: Publish icarus-canister
      run: |
        cd crates/icarus-canister
        cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --no-verify
        sleep 30
    
    - name: Publish icarus (main crate)
      run: |
        cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --no-verify
        sleep 30
    
    - name: Publish icarus-cli
      run: |
        cd cli
        cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }} --no-verify
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## Icarus SDK v${{ steps.get_version.outputs.VERSION }}
          
          ### Installation
          ```toml
          [dependencies]
          icarus = "${{ steps.get_version.outputs.VERSION }}"
          ```
          
          ### What's Changed
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          
          ### Crates Published
          - [icarus](https://crates.io/crates/icarus/${{ steps.get_version.outputs.VERSION }})
          - [icarus-cli](https://crates.io/crates/icarus-cli/${{ steps.get_version.outputs.VERSION }})
          - [icarus-core](https://crates.io/crates/icarus-core/${{ steps.get_version.outputs.VERSION }})
          - [icarus-derive](https://crates.io/crates/icarus-derive/${{ steps.get_version.outputs.VERSION }})
          - [icarus-canister](https://crates.io/crates/icarus-canister/${{ steps.get_version.outputs.VERSION }})
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.VERSION, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}