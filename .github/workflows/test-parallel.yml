name: Test Parallel

# Manual workflow to test parallel execution improvements
on:
  workflow_dispatch:
    inputs:
      parallel-jobs:
        description: 'Number of parallel test jobs'
        required: false
        default: '4'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-D warnings"

jobs:
  # Matrix strategy for E2E test files
  test-e2e-parallel:
    name: E2E ${{ matrix.test }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        test:
          - test_new_command
          - test_build_command
          - test_validate_command
          - test_workflow
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown
    
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    
    - name: Cache cargo binaries (ic-wasm)
      uses: actions/cache@v4
      with:
        path: ~/.cargo/bin
        key: ${{ runner.os }}-cargo-bin-ic-wasm-v1
        restore-keys: |
          ${{ runner.os }}-cargo-bin-
    
    - name: Install ic-wasm if not cached
      run: |
        if ! command -v ic-wasm &> /dev/null; then
          echo "Installing ic-wasm..."
          cargo install ic-wasm --locked
        else
          echo "ic-wasm already installed"
        fi
    
    - name: Build CLI
      run: cargo build --package icarus-cli --bin icarus --release
    
    - name: Cache shared test project
      uses: actions/cache@v4
      with:
        path: /tmp/icarus-e2e-shared-project
        key: ${{ runner.os }}-e2e-project-${{ hashFiles('cli/templates/**') }}-${{ hashFiles('examples/**') }}
        restore-keys: |
          ${{ runner.os }}-e2e-project-
    
    - name: Run ${{ matrix.test }}
      run: |
        cd cli
        cargo test --test ${{ matrix.test }} --release
      env:
        RUST_LOG: warn

  # Summary job
  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test-e2e-parallel
    if: always()
    steps:
    - name: Check test results
      run: |
        echo "## Parallel Test Execution Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
          echo "❌ Some tests failed" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ All tests passed in parallel!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Performance Benefits:" >> $GITHUB_STEP_SUMMARY
          echo "- Tests run in parallel across matrix" >> $GITHUB_STEP_SUMMARY
          echo "- Shared test project cached between runs" >> $GITHUB_STEP_SUMMARY
          echo "- CLI binary built once and reused" >> $GITHUB_STEP_SUMMARY
        fi