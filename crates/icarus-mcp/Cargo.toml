[package]
name = "icarus-mcp"
version.workspace = true
authors.workspace = true
edition.workspace = true
license-file.workspace = true
repository.workspace = true
description = "MCP (Model Context Protocol) server for Internet Computer canisters"
documentation = "https://docs.rs/icarus-mcp"
homepage = "https://github.com/galenoshea/icarus-sdk"
readme = "README.md"
keywords = ["icp", "internet-computer", "mcp", "ai", "server"]
categories = ["development-tools", "web-programming", "network-programming"]

# [[bin]]
# name = "icarus-mcp"
# path = "src/main.rs"

[features]
default = ["client", "server", "streaming"]

# Core features
client = ["networking", "ic-agent", "rustc-hash", "serde", "serde_json", "smallvec"]
server = ["client", "protocol", "tokio", "async-trait", "tracing-subscriber"]
streaming = ["storage", "bytes", "tokio-stream", "tokio", "serde_json"]
protocol = ["rmcp", "serde", "serde_json", "smallvec"]

# Advanced features
networking = ["url", "once_cell", "tokio"]
storage = ["bytes"]
cli = ["clap", "is-terminal", "tracing-subscriber"]

# Performance optimization features
simd = ["wide"]

[dependencies]
# Core dependencies (always included)
anyhow = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
candid = { workspace = true }

# Feature-gated dependencies
# MCP protocol implementation
rmcp = { workspace = true, optional = true }

# ICP integration
ic-agent = { workspace = true, optional = true }

# Async runtime
tokio = { workspace = true, optional = true }
async-trait = { workspace = true, optional = true }

# Serialization
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }

# CLI utilities
clap = { workspace = true, features = ["derive", "env"], optional = true }
url = { workspace = true, optional = true }

# Performance optimizations
rustc-hash = { workspace = true, optional = true }
smallvec = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
once_cell = { workspace = true, optional = true }

# Terminal detection
is-terminal = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }

# Streaming support
tokio-stream = { version = "0.1", optional = true }

# SIMD optimizations
wide = { version = "0.7", optional = true }

[dev-dependencies]
tokio-test = "0.4"
futures = { workspace = true }
tempfile = { workspace = true }

# Benchmarking (conditional dev-dependencies)
criterion = { version = "0.5", features = ["html_reports"] }
rand = "0.8"

[[bench]]
name = "streaming_performance"
harness = false
required-features = ["streaming"]

[[bench]]
name = "simd_comparison"
harness = false
required-features = ["streaming"]
