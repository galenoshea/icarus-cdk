[package]
name = "icarus-core"
description = "Core types and MCP protocol integration for the Icarus CDK"
documentation = "https://docs.rs/icarus-core"
readme = "README.md"
keywords = ["mcp", "ai", "tools", "internet-computer", "protocol"]
categories = ["api-bindings", "web-programming", "wasm"]
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license-file.workspace = true
repository.workspace = true
homepage.workspace = true

[dependencies]
# Core serialization and MCP protocol
rmcp = { workspace = true }
candid = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }

# Error handling following rust_best_practices.md
thiserror = { workspace = true }

# IC integration
ic-cdk = { workspace = true }
ic-stable-structures = { workspace = true }

# Performance optimizations from workspace following rust_best_practices.md
rustc-hash = { workspace = true }
smallvec = { workspace = true }

# Time handling (WASM-compatible)
chrono = { workspace = true }

# UUID generation for session IDs - REMOVED per rust_best_practices.md
# getrandom = { workspace = true }

[dev-dependencies]
proptest = { workspace = true }
tokio = { workspace = true }
serde_json = { workspace = true }
criterion = { workspace = true }

[features]
default = ["std"]
std = []

# Feature for development/testing (auto-enabled in dev/test profiles)
test-utils = []

# Feature for IC canister environment (use ic_cdk::api::time)
ic-canister = []

# Feature for stable memory-backed authentication system
stable-auth = []

[lints]
workspace = true